<#@ template debug="true" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".sql" #>

<#
/* 
   КОНФИГУРАЦИЯ ГЕНЕРАТОРА
   N - количество таблиц
   M - количество полей в каждой таблице
   Проверка: N не может быть больше M
*/
const int N = 3;
const int M = 5;

// Валидация входных параметров
SqlGeneratorHelper.ValidateInput(N, M);

// Заголовок генерации
var generationDate = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
#>

-- ============================================
-- АВТОГЕНЕРИРОВАННЫЕ SQL-ЗАПРОСЫ
-- Параметры:
-- Количество таблиц (N): <#= N #>
-- Полей в таблицах (M): <#= M #>
-- Дата генерации: <#= generationDate #>
-- ============================================

<#
// ОСНОВНАЯ ЛОГИКА ГЕНЕРАЦИИ
for (int tableNum = 1; tableNum <= N; tableNum++)
{
    // Определяем номер поля (равен номеру таблицы)
    int fieldNum = tableNum;
    
    // Генерируем имена через методы класса-расширения
    string tableName = SqlGeneratorHelper.GenerateTableName(tableNum);
    string fieldName = SqlGeneratorHelper.GenerateFieldName(fieldNum);
#>

-- Запрос <#= tableNum #> из <#= N #> --
SELECT <# 
    // Выводим название поля через блок управления (Write)
    Write(fieldName); 
#> 
FROM <#= tableName #>; 

<#
    // Добавляем разделитель между запросами
    if (tableNum < N) 
    {
        WriteLine("");
    }
}
#>

-- ============================================
-- ГЕНЕРАЦИЯ ЗАВЕРШЕНА
-- Всего запросов: <#= N #>
-- ============================================

<#+
// Класс-расширение для валидации и генерации SQL
public class SqlGeneratorHelper
{
    /// <summary>
    /// Проверяет корректность входных параметров
    /// </summary>
    /// <exception cref="ArgumentException">Выбрасывается при N > M</exception>
    public static void ValidateInput(int tablesCount, int fieldsCount)
    {
        if (tablesCount > fieldsCount)
        {
            throw new ArgumentException(
                $"Ошибка валидации: Количество таблиц ({tablesCount}) " +
                $"превышает количество полей ({fieldsCount})");
        }
    }

    /// <summary>
    /// Генерирует название поля по его номеру
    /// </summary>
    public static string GenerateFieldName(int fieldNumber) 
    {
        return $"Field_{fieldNumber}";
    }

    /// <summary>
    /// Генерирует название таблицы по ее номеру
    /// </summary>
    public static string GenerateTableName(int tableNumber)
    {
        return $"Table_{tableNumber}";
    }
}
#>
